@page "/CustHome"
@using Project_v2.Data
@inject StoreService  StoreService

<p>CustHome</p>

@code {
     StoreService.Distributor selectedDistributor;
     private StoreService.Customer selectedCustomer = null; 
     List<StoreService.Distributor> distributors; 
     List<StoreService.Product> currentProducts;
     int selectedScreen;

     protected override async Task OnInitializedAsync()
     {
         distributors = await StoreService.GetDistributors();
     } 
 
     void SelectScreen(int screenNumber) 
     { 
        if (screenNumber == 0) { 
             selectedDistributor = null; 
      }
         selectedScreen = screenNumber; 
     }
     
     async Task SelectDistributor(StoreService.Distributor d) 
     {
         currentProducts = await StoreService.GetDistributorsProducts(d.Id); 
     } 
 
     async Task Refresh() { 
         await SelectDistributor(selectedDistributor); 
         StateHasChanged(); 
     } 
 } 

 @if (selectedCustomer == null) { 
     <div> 
         <label>Select Distributor: </label> 
         @if (distributors != null) { 
             <select> 
                 @foreach (var d in distributors) { 
                     <option @onclick=@(e => SelectDistributor(d)) value=;@d.Id>@d.Name</option> 
                 } 
             </select> 
         } else { 
            <span>Loading...</span> 
         } 
     </div> 
 } else { 
    <div class="row"> 
         <div class="col-4">Distributor Selected: @selectedCustomer.Name</div> 
         <div class="col-2"><button @onclick=@(e =>SelectScreen(0))>Select Distributor</button></div> 
         <div class="col-2"><button @onclick=@(e =>SelectScreen(1))>Add Product</button></div> 
         <div class="col-2"><button @onclick=@(e =>SelectScreen(2))>Inventory</button></div> 
         <div class="col-2"><button @onclick=@(e =>SelectScreen(3))>Sales</button></div> 
     </div>
     switch (selectedScreen)
     {
         case 0:
         {
             break;
         }
         case 1:
         {
             <CustomerAdd customer=@selectedCustomer currentProducts=@currentProducts onChanged=Refresh/>
             break;
         }
         case 2:
         {
             <CustomerCart customer=@selectedCustomer currentProducts=@currentProducts onChanged=Refresh/>
             break;
         }
//         case 3:
//         {
//             < customer=@selectedCustomer/>
//             break;
//         }
     }
 }
