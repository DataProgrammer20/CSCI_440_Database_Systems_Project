 @using Project_v2.Data
 @inject StoreService  StoreService

<div><h3>Cart:</h3></div>

 @if (cartLines == null) 
 { 
     <div></div> 
 } else { 
     <table width="100%"> 
         <tr> 
             <th width="40%">Name</th>
             <th width="20%">Cost</th> 
             <th width="20%">Quanity</th> 
             <th width="20%">Remove</th> 
         </tr> 
     @foreach (StoreService.Product p in cartLines) 
     { 
         <tr> 
             <td>@p.Name</td> 
             <td>@p.Cost.ToString("c")</td> 
             <td>@p.InventoryCount</td> 
            <td><button @onclick=@(e=>DeleteProduct(p))>Delete Product</button></td> 
         </tr> 
     } 
     </table> 
 } 
 @code 
{ 
     [Parameter]
     private StoreService.Customer customer { get; set; } 

     [Parameter]
     private List<Tuple<StoreService.Product, int>> cartLines { get; set; } 

     [Parameter] 
     public EventCallback onChanged { get; set; } 
     
     StoreService.Product newProduct = new StoreService.Product();
     
     //List<StoreService.Product> currentProducts = null; *@
     protected override async Task OnInitializedAsync() 
     {
         cartLines = await StoreService.GetCart(customer); 
     }

     
//     async Task SaveNewProduct()
//     {
//         // var distributor;
//         //Save Product here *@
//         var i = 0;
//         newProduct.id = Guid.NewGuid();
//         newProduct.distributorID = distributor.id;
//         StoreService.SaveNewProduct(newProduct);
//         var currentProducts = await StoreService.GetDistributorsProducts(distributor.id);
//         await onChanged.InvokeAsync(null); 
//     } 
 } 
