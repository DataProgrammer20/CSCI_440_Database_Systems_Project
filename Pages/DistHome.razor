@page "/DistHome"
@using Project_v2.Data
@using System.Collections.Generic
@inject StoreService  storeService

<p>DistHome</p>

@if (selectedDistributor == null) {
    <div>
        <label>Select Distributor: </label>

        @if (distributors != null) {
            <select>
                @foreach (StoreService.Distributor d in distributors) {
                    <option @onclick=@(e => SelectDistributor(d)) value=@d.Id>@d.Name</option>
                }
            </select>
        } else {
            <span>Loading...</span>
        }
    </div>
} else {
    <div class="row">
        <div class="col-4">Distributor Selected: @selectedDistributor.Name</div>

        <div class="col-2"><button @onclick=@(e =>SelectScreen(0))>Select Distributor</button></div>
        <div class="col-2"><button @onclick=@(e =>SelectScreen(1))>Add Product</button></div>
        <div class="col-2"><button @onclick=@(e =>SelectScreen(2))>Inventory</button></div>
        <div class="col-2"><button @onclick=@(e =>SelectScreen(3))>Sales</button></div>
    </div>
    switch (selectedScreen) {

        case 0: {

                break;
            }
        case 1: {
        <p>case 1</p>
        <DistributorAdd distributor=@selectedDistributor currentProducts=@currentProducts onChanged=@Refresh />
        break;
        }
        case 2: {
        <p>case 2</p>
        <DistributorInventory distributor=@selectedDistributor currentProducts=@currentProducts onChanged=@Refresh />
        break;
        }
        case 3: {
        <p>case 3</p>
        <DistributorSales distributor=@selectedDistributor />
        break;
        }

    }

}
@code {
    public StoreService.Distributor selectedDistributor = null;
    List<StoreService.Distributor> distributors = null;
    List<StoreService.Product> currentProducts = null;

    int selectedScreen = 0;

    protected override async Task OnInitializedAsync() {
        distributors = await storeService.GetDistributors();

    }

    void SelectScreen(int screenNumber) {
        if (screenNumber == 0) {
            selectedDistributor = null;
        }

        selectedScreen = screenNumber;
    }

    async Task SelectDistributor(StoreService.Distributor d) {
        selectedDistributor = d;
        currentProducts = await storeService.GetDistributorsProducts(selectedDistributor.Id);
    }

    async Task Refresh() {
        await SelectDistributor(selectedDistributor);
        StateHasChanged();
    }
}
